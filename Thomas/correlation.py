# ---
# jupyter:
#   jupytext:
#     text_representation:
#       extension: .py
#       format_name: light
#       format_version: '1.5'
#       jupytext_version: 1.13.0
#   kernelspec:
#     display_name: Python 3
#     language: python
#     name: python3
# ---

# +
import pandas as pd
import numpy as np
import missingno as mso
import matplotlib.pyplot as plt
import seaborn as sns

df = pd.read_csv('D:/packt/Project/1019_Microsoft_Malware_Detection/Dataset/Malware_Classification.csv/Malware_Classification.csv')
# -

df.drop('Unnamed: 57', axis=1, inplace=True)
df.drop('ID', axis=1, inplace=True)

corre = df.corr()
corre.shape

# +

mask = np.ones(corre.shape)
for i in range(0, corre.shape[1] - 1):
    for j in range(0, corre.shape[1] - 1):
        if i>j:
            mask[i][j] = 0
    
# -

plt.figure(figsize = (30,30))
sns.heatmap(corre, mask = mask, annot=True)
plt.show()


def remove_multicoll(CORR, threshold=0.8):
    '''
    removing all features with corr above threshold
    '''
    l = []
    for i in CORR.columns:
        for x,j in enumerate(CORR[i]):
            if j>threshold:
                if i != CORR.columns[x]:
                    l.append((i,CORR.columns[x]))
    for i in l:
        for j in l:
            if i==j:
                l.remove(j)
    
    Remove = []
    keep = []
    for i in l:
        if i[0] not in keep:
            keep.append(i[0])
        if i[1] not in Remove:
            Remove.append(i[1])
    return Remove, keep


R, k = remove_multicoll(corre, 0.5)


def dist_box():
    '''
    Check for normality and Outliers
    '''
    fig,ax = plt.subplots(15,3, figsize=(30,60))
    for c,i in zip(X.columns, range(1,len(X.columns))):
        sns.distplot(X[c], ax=ax[i,0])
        sns.boxplot(X[c], ax=ax[i,1], color="maroon", saturation=4.6)
        stats.probplot(X[c], plot=ax[i,2])

# !jupytext --to py correlation.ipynb


